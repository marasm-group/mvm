;;
;; math -- mathematic functions and constants module
;;
#json
{
    "author":"SR3u",
    "dependencies":["math/main"],
    "init":"$math_trigonometry_init"
}
#end
$math_trigonometry_init
gvar math_MAX_SIN_STOP
mov math_MAX_SIN_STOP 20
ret
$deg2rad ; converts value from degrees to radians
var x
pop x
div x x 180
mul x x PI
push x
ret
$rad2deg ; converts value from radians to degrees
var x
pop x
mul x x 180
div x x PI
push x
ret
$cos ; calculate cos(x) where x is in degrees
var x
pop x
sub x 90 x
push x
call $sin
ret
$cosr ; calculate cos(x) where x is in radians
var x
pop x
sub x PI_HALF x
push x
call $sin
ret
$sin ; calculate sin(x) where x is in degrees
call $deg2rad
call $sinr
ret
$math_sinr_bound
var x
pop x
var xPI
div xPI x 360
floor xPI xPI
mul xPI xPI 360
sub x x xPI
push x
ret
$math_sinr_bound_r
call $rad2deg
call $math_sinr_bound
ret
$sinr ; calculate sin(x) where x is in radians
var x
pop x
var res
mov res x ; res=x
var f
var x_
var t
var stage
var tmp_stop
mov stage 1
@math_sinr_loop_0
add stage stage 2 ; stage+=2
push x ; res-=x^stage/stage!
push stage
call $powi
pop x_
push stage
call $factorial
pop f
div t x_ f
sub res res t
add stage stage 2 ; stage+=2
push x ; res+=x^stage/stage!
push stage
call $powi
pop x_
push stage
call $factorial
pop f
div t x_ f
add res res t
sub tmp_stop math_MAX_SIN_STOP stage
jmz tmp_stop @math_sinr_loop_0
add stage stage 2 ; stage+=2
push x ; res-=x^stage/stage!
push stage
call $powi
pop x_
push stage
call $factorial
pop f
div t x_ f
sub res res t
push res ; return res
ret